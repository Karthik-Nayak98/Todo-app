{"ast":null,"code":"var _jsxFileName = \"/home/karthik/todo-app/src/components/MainComponent.jsx\";\nimport React, { Component } from \"react\";\nimport { List } from \"./ListComponent\";\nimport { DATABASE, AUTH } from \"../config/firebase.utils\";\nimport \"../styles/MainStyles.css\";\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      event.persist();\n      this.setState({\n        currentTask: event.target.value\n      });\n    };\n\n    this.addItem = event => {\n      event.preventDefault();\n      this.DATDATABASE.push().set({\n        task: this.state.currentTask\n      });\n      this.setState(() => ({\n        currentTask: \"\"\n      }));\n      this.db.set({\n        count: this.state.count + 1\n      });\n    };\n\n    this.deleteTask = itemId => {\n      this.DATDATABASE.child(itemId).remove();\n      this.db.set({\n        count: this.state.count - 1\n      });\n      this.setState({\n        count: this.state.count - 1\n      });\n    };\n\n    this.EditItem = itemId => {\n      const taskValue = this.state.tasks.filter(item => {\n        return item.id === itemId;\n      });\n      this.setState({\n        currentTask: taskValue[0].value\n      }); // set the input field value\n    };\n\n    this.logout = () => {\n      AUTH.signOut();\n    };\n\n    this.state = {\n      tasks: [],\n      count: 0,\n      currentTask: \"\",\n      username: \"\"\n    };\n    const uid = AUTH.currentUser.uid;\n    this.database = DATABASE.ref(`users/${uid}`).child(\"task\");\n    this.db = DATABASE.ref(`users/${uid}`).child(\"taskCount\");\n  }\n\n  componentDidMount() {\n    let previousTasks = this.state.tasks;\n    const userId = AUTH.currentUser.uid;\n    DATABASE.ref(\"users/\" + userId).once(\"value\").then(snapshot => {\n      const username = snapshot.val() && snapshot.val().username || \"Anonymous\";\n      this.setState({\n        username: username\n      });\n    });\n    this.db.on(\"value\", snapshot => {\n      const taskCount = snapshot.exists() ? snapshot.val().count : 0;\n      this.setState({\n        count: taskCount\n      });\n    });\n    this.DATDATABASE.on(\"child_added\", snapshot => {\n      previousTasks.push({\n        id: snapshot.key,\n        value: snapshot.val().task\n      });\n      this.setState({\n        tasks: previousTasks\n      });\n    });\n    this.DATDATABASE.on(\"child_removed\", snapshot => {\n      const filteredArray = previousTasks.filter(item => {\n        return item.id !== snapshot.key;\n      });\n      this.setState({\n        tasks: filteredArray\n      });\n      previousTasks = filteredArray; // to update the previous array after removing the item\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"nav\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"display-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, \"Logged in as: \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 29\n      }\n    }, this.state.username)), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.logout,\n      className: \"logout\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-sign-out\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }), \" Logout\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, \"Todo List App\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"todo-form\",\n      onSubmit: this.addItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"task-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input-title\",\n      type: \"text\",\n      value: this.state.currentTask,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, \"Enter task\")), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"todo__button\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    }, \"Add Task\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }, this.state.tasks.length === 0 ? /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    }, \"Nothing Left to do!! Enjoy your day\") : /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 15\n      }\n    }, this.state.count, \" Task to finish\"), /*#__PURE__*/React.createElement(List, {\n      tasks: this.state.tasks,\n      taskCompleted: this.taskCompleted,\n      deleteItem: this.deleteTask,\n      EditItem: this.EditItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/home/karthik/todo-app/src/components/MainComponent.jsx"],"names":["React","Component","List","DATABASE","AUTH","Main","constructor","props","handleChange","event","persist","setState","currentTask","target","value","addItem","preventDefault","DATDATABASE","push","set","task","state","db","count","deleteTask","itemId","child","remove","EditItem","taskValue","tasks","filter","item","id","logout","signOut","username","uid","currentUser","database","ref","componentDidMount","previousTasks","userId","once","then","snapshot","val","on","taskCount","exists","key","filteredArray","render","length","taskCompleted"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { List } from \"./ListComponent\";\nimport { DATABASE, AUTH } from \"../config/firebase.utils\";\nimport \"../styles/MainStyles.css\";\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tasks: [],\n      count: 0,\n      currentTask: \"\",\n      username: \"\",\n    };\n    const uid = AUTH.currentUser.uid;\n    this.database = DATABASE.ref(`users/${uid}`).child(\"task\");\n    this.db = DATABASE.ref(`users/${uid}`).child(\"taskCount\");\n  }\n\n  componentDidMount() {\n    let previousTasks = this.state.tasks;\n    const userId = AUTH.currentUser.uid;\n    DATABASE.ref(\"users/\" + userId)\n      .once(\"value\")\n      .then((snapshot) => {\n        const username =\n          (snapshot.val() && snapshot.val().username) || \"Anonymous\";\n        this.setState({ username: username });\n      });\n\n    this.db.on(\"value\", (snapshot) => {\n      const taskCount = snapshot.exists() ? snapshot.val().count : 0;\n      this.setState({ count: taskCount });\n    });\n\n    this.DATDATABASE.on(\"child_added\", (snapshot) => {\n      previousTasks.push({\n        id: snapshot.key,\n        value: snapshot.val().task,\n      });\n\n      this.setState({\n        tasks: previousTasks,\n      });\n    });\n\n    this.DATDATABASE.on(\"child_removed\", (snapshot) => {\n      const filteredArray = previousTasks.filter((item) => {\n        return item.id !== snapshot.key;\n      });\n      this.setState({ tasks: filteredArray });\n      previousTasks = filteredArray; // to update the previous array after removing the item\n    });\n  }\n\n  handleChange = (event) => {\n    event.persist();\n    this.setState({\n      currentTask: event.target.value,\n    });\n  };\n\n  addItem = (event) => {\n    event.preventDefault();\n    this.DATDATABASE.push().set({\n      task: this.state.currentTask,\n    });\n\n    this.setState(() => ({\n      currentTask: \"\",\n    }));\n\n    this.db.set({\n      count: this.state.count + 1,\n    });\n  };\n\n  deleteTask = (itemId) => {\n    this.DATDATABASE.child(itemId).remove();\n    this.db.set({ count: this.state.count - 1 });\n    this.setState({ count: this.state.count - 1 });\n  };\n\n  EditItem = (itemId) => {\n    const taskValue = this.state.tasks.filter((item) => {\n      return item.id === itemId;\n    });\n    this.setState({ currentTask: taskValue[0].value }); // set the input field value\n  };\n\n  logout = () => {\n    AUTH.signOut();\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"column\">\n          <nav>\n            <p className=\"display-name\">\n              Logged in as: <span>{this.state.username}</span>\n            </p>\n            <button onClick={this.logout} className=\"logout\">\n              <i className=\"fa fa-sign-out\"></i> Logout\n            </button>\n          </nav>\n          <div className=\"card\">\n            <h1 className=\"card-header\">Todo List App</h1>\n            <form className=\"todo-form\" onSubmit={this.addItem}>\n              <div className=\"task-input\">\n                <input\n                  className=\"input-title\"\n                  type=\"text\"\n                  value={this.state.currentTask}\n                  onChange={this.handleChange}\n                  required\n                />\n                <label>Enter task</label>\n              </div>\n              <button className=\"todo__button\" type=\"submit\">\n                Add Task\n              </button>\n            </form>\n          </div>\n        </div>\n\n        <div className=\"column\">\n          <div className=\"card\">\n            {this.state.tasks.length === 0 ? (\n              <h1 className=\"card-header\">\n                Nothing Left to do!! Enjoy your day\n              </h1>\n            ) : (\n              <h1 className=\"card-header\">{this.state.count} Task to finish</h1>\n            )}\n\n            <List\n              tasks={this.state.tasks}\n              taskCompleted={this.taskCompleted}\n              deleteItem={this.deleteTask}\n              EditItem={this.EditItem}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}